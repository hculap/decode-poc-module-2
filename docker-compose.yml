version: '3.8'

services:
  web:
    build: .
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URI=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-fireflies_db}
      - FIREFLIES_API_KEY=${FIREFLIES_API_KEY}
      - FIREFLIES_WEBHOOK_SECRET=${FIREFLIES_WEBHOOK_SECRET}
      - FLASK_ENV=${FLASK_ENV:-production}
      - SECRET_KEY=${SECRET_KEY:-default_dev_key_change_in_production}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - PROJECT_BRIEF_SERVICE_URL=${PROJECT_BRIEF_SERVICE_URL:-http://localhost:8001}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ENABLE_BRIEF_VALIDATION=${ENABLE_BRIEF_VALIDATION:-false}
    volumes:
      - ./app:/app/app
      - ./wsgi.py:/app/wsgi.py
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M

  db:
    image: postgres:14-alpine
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-fireflies_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-fireflies_db}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    # Only expose the port locally for development
    ports:
      - "127.0.0.1:5432:5432"

networks:
  default:
    name: fireflies-network
    driver: bridge

volumes:
  postgres_data:
    name: fireflies_postgres_data